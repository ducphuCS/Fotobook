{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar includes = require('./includes'),\n    attr = require('./attr'),\n    all = require('./all');\n\nmodule.exports = function form(root) {\n  var name = attr('name'),\n      values = {},\n      invalid = [];\n  all('[name]', root).map(function (el) {\n    var n = name(el),\n        v = values[n] = _typeof(el.state) == 'object' && 'value' in el.state ? el.state.value : el.files ? el.files : el.type == 'checkbox' ? (values[n] || []).concat(el.checked ? el.value : []) : el.type == 'radio' ? el.checked ? el.value : values[n] : el.value;\n    if (includes('is-invalid')(el.className)) invalid.push(el);\n  });\n  return {\n    values: values,\n    invalid: invalid\n  };\n};","map":null,"metadata":{},"sourceType":"module"}